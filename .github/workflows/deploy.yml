name: Deploy

on:
  repository_dispatch:
    types: [deploy]

jobs:
  notify_deploy_started:
    runs-on: ubuntu-20.04
    if: ${{ github.event.client_payload.is_pr == false }}
    outputs:
      check_job_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
      - uses: octokit/request-action@v2.x
        id: create_check_run
        with:
          route: POST /repos/{owner}/{repo}/check-runs
          owner: pythonpizza
          repo: ${{ github.event.client_payload.repository }}
          mediaType: |
            previews:
              - antiope
          name: "Deployment"
          head_sha: ${{ github.event.client_payload.sha }}
          output: |
            title: Deployment
            summary: Building and deploying the website
            images:
              - alt: Logo
                image_url: https://avatars0.githubusercontent.com/u/71673624?s=460&u=9b7ca66487214805e173db6981ddd0ff246cf24e&v=4
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  notify_pr_is_deploying:
    runs-on: ubuntu-20.04
    if: ${{ github.event.client_payload.is_pr }}
    steps:
      - name: Find Deploy Comment
        uses: peter-evans/find-comment@v1
        id: find_comment
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.client_payload.pr_number }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          comment-author: pythonpizzabot
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ steps.find_comment.outputs.comment-id == null }}
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.client_payload.pr_number }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          body: |
            Deploy in progress üïê
            üåê URL: https://${{ github.event.client_payload.domain }}.python.pizza/
      - name: Update comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ steps.find_comment.outputs.comment-id != null }}
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.number }}
          edit-mode: replace
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          body: |
            Deploy in progress üïê
            üåê URL: https://${{ github.event.client_payload.domain }}.python.pizza/

  terraform:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: event-website
    steps:
      - uses: actions/checkout@master
      - uses: hashicorp/setup-terraform@v1
      - run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
      - name: Select or create event workspace
        run: terraform workspace select ${{ github.event.client_payload.event }} || terraform workspace new ${{ github.event.client_payload.event }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
      - name: Apply changes
        run: terraform apply -auto-approve -no-color
        env:
          TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_CLOUDFLARE_TOKEN }}
          TF_VAR_domain: ${{ github.event.client_payload.domain }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1

  build_site:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
        with:
          repository: "pythonpizza/${{ github.event.client_payload.repository }}"
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ github.event.client_payload.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: "15.5.1"
      - name: Cache nextjs build
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-${{ github.event.client_payload.repository }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ github.event.client_payload.repository }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install deps
        run: yarn install
      - name: Build site
        run: yarn build
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: out

  upload_to_s3:
    runs-on: ubuntu-20.04
    needs: [build_site, terraform]
    steps:
      - name: Download site build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Upload to S3
        run: aws s3 cp . s3://${{ github.event.client_payload.domain }}.python.pizza/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1

  clear_cache:
    runs-on: ubuntu-20.04
    needs: [upload_to_s3]
    steps:
      - name: Clear cloudflare cache
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.TF_VAR_CLOUDFLARE_TOKEN }}" \
            --data '{"files": ["https://${{ github.event.client_payload.event }}.python.pizza/"]}' \
            https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache

  notify_pr_deployed:
    runs-on: ubuntu-20.04
    if: ${{ github.event.client_payload.is_pr }}
    needs: [upload_to_s3]
    steps:
      - name: Find Deploy Comment
        uses: peter-evans/find-comment@v1
        id: find_comment
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.client_payload.pr_number }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          comment-author: pythonpizzabot
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ steps.find_comment.outputs.comment-id == null }}
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.client_payload.pr_number }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          body: |
            PR deployed ‚úÖ
            üåê URL: https://${{ github.event.client_payload.domain }}.python.pizza/
      - name: Update comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ steps.find_comment.outputs.comment-id != null }}
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.number }}
          edit-mode: replace
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
          body: |
            PR deployed ‚úÖ
            üåê URL: https://${{ github.event.client_payload.domain }}.python.pizza/

  notify_deploy_completed:
    runs-on: ubuntu-20.04
    needs: [upload_to_s3, notify_deploy_started]
    if: ${{ github.event.client_payload.is_pr == false }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          repository: pythonpizza/${{ github.event.client_payload.repository }}
      - uses: octokit/request-action@v2.x
        id: update_check_run
        with:
          route: PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}
          owner: pythonpizza
          repo: ${{ github.event.client_payload.repository }}
          mediaType: |
            previews:
              - antiope
          check_run_id: ${{ needs.notify_deploy_started.outputs.check_job_id }}
          conclusion: "success"
          status: "completed"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
