name: Deploy

on:
  repository_dispatch:
    types: [prod_push]

jobs:
  terraform:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: event-website
        TF_WORKSPACE: ${{ github.event.client_payload.event }}
    steps:
      - uses: actions/checkout@master
      - uses: hashicorp/setup-terraform@v1
      - run: terraform init
      - run: terraform workspace new $TF_WORKSPACE || true
      - run: terraform apply -auto-apply -no-color
        env:
          TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_CLOUDFLARE_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
  build-site:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
        with:
          repository: "pythonpizza/${{ github.event.client_payload.repository }}"
          token: ${{ secrets.BOT_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: "15.5.1"
      - name: Install dependencies
        run: yarn
      - name: Build site
        run: yarn build
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: out

  upload-to-s3:
    runs-on: ubuntu-20.04
    needs: [build-site, terraform]
    steps:
      - name: Download site build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Upload to S3
        run: aws s3 cp . s3://${{ github.event.client_payload.event }}.python.pizza/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
